#!/bin/sh

main_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$main_dir"


function Allclean() {
    if [ -d "${$results_path}" ]; then
        rm -r "${$results_path}"
    fi
    mkdir "${$results_path}"
}

function Allrun() {
    num_simulations=$(ls "$sims_path"/*.yaml | wc -l)
    if [ "$num_simulations" -eq 0 ]; then
        echo "No YAML files found in $sims_folder. Exiting."
        exit 1
    fi

    cd "$sims_path"
    sims_count=0
    for script_name in *.yaml
    do
        ((sims_count++))

        echo ""
        base_name="${script_name%.yaml}"
        echo "Running Simulation $sims_count : $script_name"

        if [ ! -d "$results_path/$base_name" ]; then
            mkdir "$results_path/$base_name"
        fi

        partition_simulation=$(yq '.partition_simulation' "$script_name")
        if [ "$partition_simulation" = true ] && [ "$partition_simulation" != "null" ]; then
            num_iters_per_step=$(yq '.num_iters_per_step' "$script_name")
            total_N_iters=$(yq '.total_N_iters' "$script_name")
            num_steps=$(echo "($total_N_iters / $num_iters_per_step)" | bc)
            first_step=1

            dir="$results_path/$base_name/iterations"
            if [ -d "$dir" ]; then
                max_iter=0
                for dir in "$dir"/iter_*; do
                    iter_num=${dir##*_} 
                    if (( iter_num > max_iter )); then
                        max_iter=$iter_num
                        first_step=$(echo "( $max_iter/$num_iters_per_step) + 1" | bc)
                    fi
                done
            fi

            for (( i=first_step; i<=$num_steps; i++ ))
            do
                echo "Running step: $i" 
                new_iters=$(echo "( $num_iters_per_step*$i)" | bc)
                sed -i "s/^N_iters: [0-9]\+/N_iters: $new_iters/" $script_name
                python "$main_dir/Simulation.py" "$script_name"
            done
        fi
        python "$main_dir/Simulation.py" "$script_name" "--pbj"

        echo "Ending Simulation $sims_count : $script_name"
        echo ""
    done
}


function PrintSims() {
    cd "$sims_path"
    for script_name in *.yaml
    do
        echo $script_name
    done
}


function SimsStatus() {

    cd "$sims_path"

    printf "\n%-20s %-16s %-10s\n" "Simulation" "Iterations" "Progress (%)"
    printf "%-20s %-16s %-10s\n" "--------------" "-------------" "------------"

    for script_name in *.yaml
    do
        base_name="${script_name%.yaml}"
        
        partition_simulation=$(yq '.partition_simulation' "$script_name")
        if [ "$partition_simulation" = true ] && [ "$partition_simulation" != "null" ]; then
            iterations=$(yq '.total_N_iters' "$script_name")
        else
            iterations=$(yq '.N_iters' "$script_name")
        fi
        
        max_iter=0
        dir="$results_path/$base_name/iterations"
        if [ -d "$dir" ]; then
            for dir in "$dir"/iter_*; do
                if [ -d "$dir" ]; then
                    iter_num=${dir##*_} 
                    if [[ "$iter_num" =~ ^[0-9]+$ ]]; then
                        if (( iter_num > max_iter )); then
                            max_iter=$iter_num
                        fi
                    fi
                fi
            done
            percentage=$(echo "scale=1; ($max_iter*100 / $iterations)" | bc)
            printf "%-20s %-16s %-10s\n" "$base_name" "$max_iter/$iterations" "$percentage"
        else
            printf "%-20s %-16s %-10s\n" "$base_name" "$max_iter/$iterations" "0.0"
        fi
    done
    echo ""
}


sims_path="$main_dir/simulations_list"
results_path="$main_dir/results"

for arg in "$@"; do
    case $arg in
        --sims-path=*)
        sims_path="${arg#*=}"
        shift
        ;;
        --results-path=*)
        results_path="${arg#*=}/results"
        shift 
        ;;
        *)
        remaining_args+=("$arg")
        ;;
    esac
done

if [[ ${#remaining_args[@]} -gt 0 ]]; then
    for cmd in "${remaining_args[@]}"; do
       "$cmd"
    done
fi